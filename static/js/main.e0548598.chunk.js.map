{"version":3,"sources":["components/Ratios.tsx","reducer/sourdoughReducer.ts","components/Sourdough.tsx","components/Navbar.tsx","components/Contact.tsx","components/NotFound.tsx","components/Footer.tsx","components/AboutBread.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Ratios","flour","water","sourdough","salt","className","sourdoughReduder","_state","action","hydration","saltPercentage","sourdoughPercentage","includeSourdough","type","finalWater","finalFlour","halfOfTheSourdoughInGrams","calculatedFlour","calculatedWater","calculatedFlourWithouthSourdough","Math","round","initialState","Sourdough","React","useState","setHydration","setFlour","setWater","setSaltPercentage","setSourdoughPercentage","setIncludeSourdough","useReducer","state","dispatch","useEffect","Number","htmlFor","id","tabIndex","onChange","e","target","value","placeholder","max","min","style","display","flexDirection","flexGrow","onFocus","step","onClick","v","checked","Navbar","to","Contact","fontWeight","NotFound","Footer","AboutBread","src","alt","href","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0548598.chunk.js","sourcesContent":["import PropTypes, { InferProps } from \"prop-types\";\n\nexport default function Ratios({\n  flour = 0,\n  water = 0,\n  sourdough = 0,\n  salt = 0,\n}: InferProps<typeof Ratios.propTypes>) {\n  return (\n    <div className=\"ratios-container small-container\">\n      <table>\n        <tbody>\n          <tr>\n            <td className=\"ratios-label\">Mj√∂l:</td>\n            <td className=\"ratios-val\">{flour}</td>\n            <td>g</td>\n          </tr>\n          <tr>\n            <td className=\"ratios-label\">Vatten:</td>\n            <td className=\"ratios-val\">{water}</td>\n            <td>g</td>\n          </tr>\n          <tr>\n            <td className=\"ratios-label\">* Surdeg:</td>\n            <td className=\"ratios-val\">{sourdough}</td>\n            <td>g</td>\n          </tr>\n          <tr>\n            <td className=\"ratios-label\">Salt:</td>\n            <td className=\"ratios-val\">{salt}</td>\n            <td>g</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nRatios.propTypes = {\n  flour: PropTypes.number.isRequired,\n  water: PropTypes.number.isRequired,\n  sourdough: PropTypes.number.isRequired,\n  salt: PropTypes.number.isRequired,\n};\n","type SourdoughReducer = (_state: SourdoughState, action: SourdoughActions) => SourdoughState\n\ntype SourdoughState = {\n  finalWater: number\n  sourdough: number\n  salt: number\n  finalFlour: number\n}\n\ntype CalculateAction = {\n  type: 'calc',\n  water?: number,\n  flour?: number\n  hydration: number\n  saltPercentage: number\n  sourdoughPercentage: number\n  includeSourdough: boolean\n}\n\ntype SourdoughActions = CalculateAction;\n\nconst sourdoughReduder = (_state: SourdoughState, action: SourdoughActions) => {\n  const { flour, water, hydration, saltPercentage, sourdoughPercentage, includeSourdough } = action;\n  if (action.type !== 'calc') {\n    return _state;\n  }\n\n  if (!flour && !water) {\n    return {\n      finalWater: 0,\n      sourdough: 0,\n      salt: 0,\n      finalFlour: 0\n    }\n  }\n\n  const sourdoughInGrams = (flour || (water! * (100 / hydration))) * (sourdoughPercentage / 100)\n  let halfOfTheSourdoughInGrams = 0\n\n  if (includeSourdough) {\n    halfOfTheSourdoughInGrams = sourdoughInGrams / 2\n  }\n\n  const calculatedFlour = flour\n    ? flour - halfOfTheSourdoughInGrams\n    : water! * (100 / hydration) - halfOfTheSourdoughInGrams\n  const calculatedWater = flour\n    ? flour * (hydration / 100) - halfOfTheSourdoughInGrams\n    : water! - halfOfTheSourdoughInGrams  \n\n  const calculatedFlourWithouthSourdough = calculatedFlour + halfOfTheSourdoughInGrams;\n\n  return {\n    finalWater: Math.round(calculatedWater),\n    sourdough: Math.round(calculatedFlourWithouthSourdough * (sourdoughPercentage / 100)),\n    salt: Math.round(calculatedFlour * (saltPercentage / 100)),\n    finalFlour: Math.round(calculatedFlour)\n  }\n}\n\nexport default sourdoughReduder\nexport type { SourdoughState, SourdoughActions, SourdoughReducer }\n","import React, { useReducer } from 'react';\nimport { Ratios } from '.';\n\nimport sourdoughReduder, { SourdoughState, SourdoughReducer } from '../reducer/sourdoughReducer'\n\nconst initialState: SourdoughState = {\n  finalWater: 0,\n  sourdough: 0,\n  salt: 0,\n  finalFlour: 0,\n};\n\nexport default function Sourdough() {\n  const [hydration, setHydration] = React.useState(\"72\");\n  const [flour, setFlour] = React.useState(\"600\");\n  const [water, setWater] = React.useState(\"\");\n  const [saltPercentage, setSaltPercentage] = React.useState(\"2.2\");\n  const [sourdoughPercentage, setSourdoughPercentage] = React.useState(\"10\");\n  const [includeSourdough, setIncludeSourdough] = React.useState(false);\n\n  const [state, dispatch] = useReducer<SourdoughReducer>(\n    sourdoughReduder,\n    initialState\n  );\n\n  const { finalWater, sourdough, salt, finalFlour } = state;\n\n  React.useEffect(() => {\n    dispatch({\n      type: 'calc',\n      flour: Number(flour),\n      water: Number(water),\n      hydration: Number(hydration),\n      saltPercentage: Number(saltPercentage),\n      sourdoughPercentage: Number(sourdoughPercentage),\n      includeSourdough,\n    });\n  }, [\n    hydration,\n    flour,\n    water,\n    saltPercentage,\n    sourdoughPercentage,\n    includeSourdough,\n  ]);\n\n  return (\n    <div className=\"container small-container\">\n      <h1 className=\"center-text\">Surdegskalkylatorn</h1>\n      <h3 className=\"center-text\">Ber√§kna m√§ngder genom att ange hydrering, m√§ngden mj√∂l samt hur mycket salt.</h3>\n\n      <form className=\"content-form\">\n        <label htmlFor=\"hydration\">Hydrering (%):</label>\n        <input id=\"hydration\" type=\"number\" tabIndex={1} onChange={(e) => setHydration(e.target.value)} value={hydration} placeholder=\"Ange hydrering i procent\" max={100} min={0} />\n        <div className='flex-side-by-side'>\n          <div style={{ display: 'flex', flexDirection: 'column', flexGrow: 2 }}>\n            <label htmlFor=\"flour\">Mj√∂l (g):</label>\n            <input id=\"flour\" type=\"number\" tabIndex={2} onFocus={() => { setWater('') }} onChange={(e) => setFlour(e.target.value)} value={flour} placeholder=\"Ange mj√∂l i gram\" />\n          </div>\n          <div style={{ display: 'flex', flexGrow: 1 }}></div>\n          <div style={{ display: 'flex', flexDirection: 'column', flexGrow: 2 }}>\n            <label htmlFor=\"water\">eller vatten (g):</label>\n            <input id=\"water\" type=\"number\" onFocus={() => { setFlour('') }} onChange={(e) => setWater(e.target.value)} value={water} placeholder=\"Ange vatten i gram\" />\n          </div>\n        </div>\n        <div className=\"slider-container\">\n          <label className=\"top-padding\" htmlFor=\"salt\">Salt:</label>\n          <input id=\"salt\" type=\"range\" tabIndex={3} min=\"0\" max=\"10\" step=\"0.1\" onChange={(e) => setSaltPercentage(e.target.value)} value={saltPercentage} />\n          <span>{saltPercentage}%</span>\n        </div>\n        \n        <div className=\"slider-container\">\n          <label className=\"top-padding\" htmlFor=\"sourdough\">Surdeg:</label>\n          <div className=\"sourdough-combo\">\n            <input id=\"sourdough\" type=\"range\" tabIndex={4} min=\"0\" max=\"50\" onChange={(e) => setSourdoughPercentage(e.target.value)} value={sourdoughPercentage} />\n            <div className=\"sourdough-check noselect\" onClick={() => setIncludeSourdough((v) => !v)}>\n              <input type=\"checkbox\" tabIndex={5} checked={includeSourdough} onChange={() => null} />\n              <span>R√§kna in surdegen i totala hydreringen</span>\n            </div>\n          </div>\n          <span>{sourdoughPercentage}%</span>\n        </div>\n        \n      </form>\n\n      <Ratios \n        flour={finalFlour}\n        water={finalWater}\n        sourdough={sourdough}\n        salt={salt} \n      />\n\n      <p>* Surdegsgrunden best√•r av lika delar mj√∂l och vatten.</p>\n\n    </div>\n  );\n}\n","import { Link } from 'react-router-dom'\n\nexport default function Navbar() {\n  return (\n    <div className=\"container navbar\">\n      <Link to='/'>Hem</Link>\n      <nav className=\"nav-links\">\n        <Link to='/about-bread'>Om br√∂d</Link>\n        <Link to='/about'>Kontakt</Link>\n      </nav>\n    </div>\n  )\n}","\nexport default function Contact () {\n  return (\n    <div className=\"container small-container\">\n      <h3 className=\"center-text\">Om surdegskalkylatorn</h3>\n      <p className=\"brodtext\">Surdegskalkylatorn √§r ett litet projekt som drivs av en glad utvecklare som ocks√• har ett stort intresse av att baka br√∂d med just surdeg.</p>\n      <p className=\"brodtext\">Det finns enorma h√§lsof√∂rdelar med att √§ta br√∂d bakat p√• riktig surdeg. Bakar man dessutom med egenmalet fullkornsmj√∂l s√• √§r detta br√∂d en av de b√§ttre saker man kan √§ta.</p>\n      <p className=\"brodtext\">Id√©n till denna sida f√∂ddes n√§r jag malde mitt eget mj√∂l. Jag ville experimentera med olika hydreringsgrader samt baka olika storlekar p√• br√∂den. Jag ins√•g d√• att det vore smidigt att ha en sida d√§r man snabbt kan skriva in m√§ngerna och f√• resten serverat.</p>\n      <p className=\"brodtext\">Om du gillar denna sida eller om du har synpunkter p√• f√∂rb√§ttringar s√• f√•r du g√§rna skicka ett mail till mig p√• <span style={{ fontWeight: 'bolder' }}>svensmikael@gmail.com</span>.</p>\n    </div>\n  )\n}\n","\nexport default function NotFound () {\n  return (\n    <div className=\"container\">\n      <h2 className=\"center-text\">Ooops! Sidan du s√∂ker finns inte h√§r.</h2>\n    </div>\n  )\n}","\nexport default function Footer () {\n  return (\n    <footer className=\"footer\">\n      <span className=\"footer-padding\">Powered by Svens Tech AB.</span>\n    </footer>\n  )\n}","export default function AboutBread () {\n  return (\n    <div className=\"container small-container\">\n      <h3 className=\"center-text\">Fakta om br√∂d, spannm√•l och gluten</h3>\n      <p className=\"brodtext\">\n        Idag √§r en av de st√∂rsta h√§lsobovarna gluten. Men √§r det helt sant? Forskning visar att fullkorn √§r det livsmedel som f√∂rebygger oh√§lsa mest! Fullkorn finns bara i spannm√•l, i v√•ra fyra s√§desslag - vete, r√•g, havre och korn. Spannm√•l har en balanserad och bra sammans√§ttning av protein, kolhydrater, fett, fibrer och vitaminer och mineraler. Fullkorn √§r riktigt bra f√∂r tarmh√§lsan d√§r ocks√• den st√∂rsta delen av v√•rat immunf√∂rsvar sitter.\n      </p>\n      <p className=\"brodtext\">\n        S√• varf√∂r √§r den nya h√§lsotrenden en trend utan br√∂d? Jo f√∂r att industrin har skapat ett n√§ringsfattigt br√∂d med h√∂gt kaloriinneh√•ll som skjuter blodsockret i h√∂jden - dvs industribr√∂d best√•r mestadels bara av vitt mj√∂l <span className=\"text-italic\">(den innersta delen av k√§rnan d√§r det vita pulvret sitter som best√•r av mestadels st√§rkelse, resten av k√§rnan har siktats bort)</span>. M√•nga f√•r d√§rf√∂r ocks√• problem med magen och tror helt enkelt att de inte t√•l br√∂d. Det √§r s√•klart skillnad p√• br√∂d och br√∂d. \n      </p>\n      <h3 className=\"center-text\">Hur tar man d√• del av fullkornets f√∂rdelar?</h3>\n      <p className=\"brodtext\">\n        L√§ttaste s√§ttet √§r att baka eget br√∂d p√• fullkornsmj√∂l, d√§r inget har siktats bort!\n      </p>\n      <p className=\"brodtext\">\n        Bakar man dessutom p√• surdeg s√• frig√∂r man mer n√§ring fr√•n mj√∂let √§n om man hade bakat med j√§st. Vill man ha ut maximalt av n√§ringen i fullkornsmj√∂l kan man mala sitt mj√∂l sj√§lv, Br√∂d och Kvarn har olika stenkvarnar f√∂r hemmabruk <span className=\"text-italic\">(dessutom √§r de en snygg inredningsdetalj)</span>. En k√§rna kan lagras n√§stan hur l√§nge som helst men n√§r k√§rnan krossas eller mals till mj√∂l b√∂rjar den h√§rskna och tappar n√§ring ju l√§ngre den st√•r. Om man f√•r tag p√• f√§rskt mj√∂l s√• kan man lagra det i frysen f√∂r att beh√•lla s√• mycket n√§ring som m√∂jligt. G√• till en lokal kvarn och fr√•ga efter fullkornsmj√∂l av olika sorter eller best√§ll p√• n√§tet!\n      </p>\n      <p className=\"brodtext\">\n        B√∂rja baka eget br√∂d och ta del av fullkornets f√∂rdelar!! \n      </p>\n      <div className=\"center-content\">\n        <img src=\"https://www.brodochkvarn.se/wp-content/uploads/2016/02/s%C3%A4d.png\" alt=\"s√§desslag\" />\n      </div>\n      <p className=\"brodtext\">\n        K√§lla: <a href=\"https://www.brodinstitutet.se\">www.brodinstitutet.se</a>\n      </p>\n    </div>\n  )\n}","import './App.css'\n\nimport { \n  Navbar,\n  Sourdough,\n  Contact,\n  NotFound,\n  Footer\n} from './components'\n\nimport { \n  HashRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom'\nimport AboutBread from './components/AboutBread'\n\nexport default function App() {\n  return (\n    <Router>\n\n      <Navbar />\n\n      <Switch>\n        <Route exact path='/'>\n          <Sourdough />\n        </Route>\n        <Route path='/other'>\n          <div>Other</div>\n        </Route>\n        <Route path='/about'>\n          <Contact />\n        </Route>\n        <Route path='/about-bread'>\n          <AboutBread />\n        </Route>\n        <Route path='*'>\n          <NotFound />\n        </Route>\n      </Switch>\n\n      <Footer />\n\n    </Router>\n    \n  )\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}