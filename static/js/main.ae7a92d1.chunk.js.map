{"version":3,"sources":["components/Ratios.tsx","reducer/sourdoughReducer.ts","components/Sourdough.tsx","components/Navbar.tsx","components/Contact.tsx","components/NotFound.tsx","components/Footer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Ratios","flour","water","sourdough","salt","className","sourdoughReduder","_state","action","type","hydration","saltPercentage","sourdoughPercentage","halfOfTheSourdoughInGrams","includeSourdough","Math","floor","finalFlour","Error","initialState","Sourdough","React","useState","setHydration","setFlour","setSaltPercentage","setSourdoughPercentage","setIncludeSourdough","useReducer","state","dispatch","useEffect","Number","htmlFor","id","onChange","e","target","value","placeholder","max","min","step","onClick","v","checked","Navbar","to","Contact","style","fontWeight","NotFound","Footer","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae7a92d1.chunk.js","sourcesContent":["import PropTypes, { InferProps } from \"prop-types\";\n\nexport default function Ratios({\n  flour = 0,\n  water = 0,\n  sourdough = 0,\n  salt = 0,\n}: InferProps<typeof Ratios.propTypes>) {\n  return (\n    <div className=\"ratios-container small-container\">\n      <table>\n        <tbody>\n          <tr>\n            <td className=\"ratios-label\">Mjöl:</td>\n            <td className=\"ratios-val\">{flour}</td>\n            <td>g</td>\n          </tr>\n          <tr>\n            <td className=\"ratios-label\">Vatten:</td>\n            <td className=\"ratios-val\">{water}</td>\n            <td>g</td>\n          </tr>\n          <tr>\n            <td className=\"ratios-label\">* Surdeg:</td>\n            <td className=\"ratios-val\">{sourdough}</td>\n            <td>g</td>\n          </tr>\n          <tr>\n            <td className=\"ratios-label\">Salt:</td>\n            <td className=\"ratios-val\">{salt}</td>\n            <td>g</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nRatios.propTypes = {\n  flour: PropTypes.number.isRequired,\n  water: PropTypes.number.isRequired,\n  sourdough: PropTypes.number.isRequired,\n  salt: PropTypes.number.isRequired,\n};\n","type SourdoughState = {\n  water: number\n  sourdough: number\n  salt: number\n  finalFlour: number\n}\n\ntype CalculateAction = {\n  type: 'calc'\n  flour: number\n  hydration: number\n  saltPercentage: number\n  sourdoughPercentage: number\n  includeSourdough: boolean\n}\n\ntype SourdoughActions = CalculateAction;\n\nconst sourdoughReduder = (_state: SourdoughState, action: SourdoughActions) => {\n  if (action.type === 'calc') {\n    const { flour, hydration, saltPercentage, sourdoughPercentage, includeSourdough } = action;\n\n    const sourdoughInGrams = flour * (sourdoughPercentage / 100)\n    let halfOfTheSourdoughInGrams = 0\n\n    if (includeSourdough) {\n      halfOfTheSourdoughInGrams = sourdoughInGrams / 2\n    }\n\n    return {\n      water: Math.floor(flour * (hydration / 100) - halfOfTheSourdoughInGrams),\n      sourdough: Math.floor(flour * (sourdoughPercentage / 100)),\n      salt: Math.floor(flour * (saltPercentage / 100)),\n      finalFlour: Math.floor(flour - halfOfTheSourdoughInGrams)\n    }\n  } else {\n    throw new Error('Unsupported Action')\n  }\n}\n\nexport { sourdoughReduder }\nexport type { SourdoughState, SourdoughActions }\n","import React from 'react';\nimport { Ratios } from '.';\n\nimport { SourdoughState, sourdoughReduder } from '../reducer/sourdoughReducer'\n\nconst initialState: SourdoughState = {\n  water: 0,\n  sourdough: 0,\n  salt: 0,\n  finalFlour: 0\n}\n\nexport default function Sourdough() {\n  const [ hydration, setHydration ] = React.useState(\"82\")\n  const [ flour, setFlour ] = React.useState(\"600\")\n  const [ saltPercentage, setSaltPercentage ] = React.useState(\"2.2\")\n  const [ sourdoughPercentage, setSourdoughPercentage ] = React.useState(\"10\")\n  const [ includeSourdough, setIncludeSourdough ] = React.useState(false)\n\n  const [state, dispatch] = React.useReducer(\n    sourdoughReduder,\n    initialState\n  )\n\n  const { water, sourdough, salt, finalFlour } = state;\n\n  React.useEffect(() => {\n    dispatch({ \n      type: 'calc',\n      flour: Number(flour), \n      hydration: Number(hydration), \n      saltPercentage: Number(saltPercentage),\n      sourdoughPercentage: Number(sourdoughPercentage),\n      includeSourdough\n    })\n  }, [hydration, flour, saltPercentage, sourdoughPercentage, includeSourdough])\n\n  return (\n    <div className=\"container small-container\">\n      <h1 className=\"center-text\">Surdegskalkylatorn</h1>\n      <h3 className=\"center-text\">Beräkna mängder genom att ange hydrering, mängden mjöl samt hur mycket salt.</h3>\n\n      <form className=\"content-form\">\n        <label htmlFor=\"hydration\">Hydrering (%):</label>\n        <input id=\"hydration\" type=\"number\" onChange={(e) => setHydration(e.target.value)} value={hydration} placeholder=\"Ange hydrering i procent\" max={100} min={0} />\n        <label htmlFor=\"flour\">Mjöl (g):</label>\n        <input id=\"flour\" type=\"number\" onChange={(e) => setFlour(e.target.value)} value={flour} placeholder=\"Ange mjöl i gram\" />\n        \n        <div className=\"slider-container\">\n          <label className=\"top-padding\" htmlFor=\"salt\">Salt:</label>\n          <input id=\"salt\" type=\"range\" min=\"0\" max=\"10\" step=\"0.1\" onChange={(e) => setSaltPercentage(e.target.value)} value={saltPercentage} />\n          <span>{saltPercentage}%</span>\n        </div>\n        \n        <div className=\"slider-container\">\n          <label className=\"top-padding\" htmlFor=\"sourdough\">Surdeg:</label>\n          <div className=\"sourdough-combo\">\n            <input id=\"sourdough\" type=\"range\" min=\"0\" max=\"50\" onChange={(e) => setSourdoughPercentage(e.target.value)} value={sourdoughPercentage} />\n            <div className=\"sourdough-check noselect\" onClick={() => setIncludeSourdough((v) => !v)}>\n              <input type=\"checkbox\" checked={includeSourdough} onChange={() => null} />\n              <span>Räkna in surdegen i totala hydreringen</span>\n            </div>\n          </div>\n          <span>{sourdoughPercentage}%</span>\n        </div>\n        \n      </form>\n\n      <Ratios \n        flour={finalFlour}\n        water={water}\n        sourdough={sourdough}\n        salt={salt} \n      />\n\n      <p>* Surdegsgrunden består av lika delar mjöl och vatten.</p>\n\n    </div>\n  );\n}\n","import { Link } from 'react-router-dom'\n\nexport default function Navbar() {\n  return (\n    <div className=\"container navbar\">\n      <Link to='/'>Hem</Link>\n      <nav className=\"nav-links\">\n        {/* <Link to='/other'>Annat</Link> */}\n        <Link to='/about'>Kontakt</Link>\n      </nav>\n    </div>\n  )\n}","\nexport default function Contact () {\n  return (\n    <div className=\"container\">\n      <h3 className=\"center-text\">Om surdegskalkylatorn</h3>\n      <p className=\"brodtext\">Surdegskalkylatorn är ett litet projekt som drivs av mig (jag kallas Surdegshasse) då jag har ett stort intresse av att baka bröd med just surdeg.</p>\n      <p className=\"brodtext\">Det finns enorma hälsfördelar med att äta bröd bakat på riktig surdeg. Bakar man dessutom med egenmalet fullkornsmjöl så är detta bröd en av de bättre saker man kan äta.</p>\n      <p className=\"brodtext\">Idén till denna sida föddes när jag malde mitt eget mjöl ville experimentera med olika hydreringsgrader samt baka olika storlekar på bröden. Jag insåg då att det vore smidigt att ha en sida där man snabbt kan skriva in mängerna och få resten serverat.</p>\n      <p className=\"brodtext\">Om du gillar denna sida lika mycket som jag eller om du har synpunkter på förbättringar så får du gärna skicka ett mail till mig på <span style={{ fontWeight: 'bolder' }}>svensmikael@gmail.com</span></p>\n    </div>\n  )\n}\n","\nexport default function NotFound () {\n  return (\n    <div className=\"container\">\n      <h2 className=\"center-text\">Ooops! Sidan du söker finns inte här.</h2>\n    </div>\n  )\n}","\nexport default function Footer () {\n  return (\n    <footer className=\"footer\">\n      <span className=\"footer-padding\">Powered by Svens Tech AB.</span>\n    </footer>\n  )\n}","import './App.css'\n\nimport { \n  Navbar,\n  Sourdough,\n  Contact,\n  NotFound,\n  Footer\n} from './components'\n\nimport { \n  HashRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom'\n\nexport default function App() {\n  return (\n    <Router>\n\n      <Navbar />\n\n      <Switch>\n        <Route exact path='/'>\n          <Sourdough />\n        </Route>\n        <Route path='/other'>\n          <div>Other</div>\n        </Route>\n        <Route path='/about'>\n          <Contact />\n        </Route>\n        <Route path='*'>\n          <NotFound />\n        </Route>\n      </Switch>\n\n      <Footer />\n\n    </Router>\n    \n  )\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}